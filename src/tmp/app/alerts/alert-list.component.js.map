{"version":3,"sources":["app/alerts/alert-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AACA,qBAA2C,eAAe,CAAC,CAAA;AAE3D,6CAAwC,gCAAgC,CAAC,CAAA;AACzE,gCAA4B,0BAA0B,CAAC,CAAA;AAEvD,+BAA4B,kBAAkB,CAAC,CAAA;AAC/C,uBAAqC,iBAAiB,CAAC,CAAA;AACvD,mCAAgC,sBAAsB,CAAC,CAAA;AASvD;IAQI,6BAAqB,OAAsB,EACtB,KAAqB,EACrB,MAAc;QAFd,YAAO,GAAP,OAAO,CAAe;QACtB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,wCAAU,GAAV,UAAW,KAAkB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAExE,sCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK;aAChB,MAAM;aACN,SAAS,CAAC,UAAA,MAAM;YACb,KAAI,CAAC,WAAW,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAClC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,yCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR,UAAS,KAAkB;QACvB,8BAA8B;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC;IA1CL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,uBAAuB,CAAC;YACpC,UAAU,EAAE,CAAC,+BAAa,EAAE,sCAAiB,CAAC;YAC9C,KAAK,EAAE,CAAC,wDAAyB,CAAC;SACrC,CAAC;;2BAAA;IAkDF,0BAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDY,2BAAmB,sBAiD/B,CAAA","file":"app/alerts/alert-list.component.js","sourcesContent":["\nimport {Component, OnInit, OnDestroy} from '@angular/core';\nimport {FirebaseListObservable} from 'angularfire2';\nimport {CompletedAlertsFilterPipe} from './completed-alerts-filter.pipe';\nimport {MapsComponent} from '../gmaps/gmaps.component';\nimport {AlertMarker} from '../management/interfaces';\nimport {AlertsService} from './alerts.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AlertBoxComponent} from './alertbox.component';\n\n@Component({\n    selector: 'as-alert-list',\n    templateUrl: 'app/alerts/alert-list.html',\n    styleUrls: ['app/alerts/alerts.css'],\n    directives: [MapsComponent, AlertBoxComponent],\n    pipes: [CompletedAlertsFilterPipe]\n})\nexport class AlertsListComponent implements OnInit, OnDestroy {\n    private alertItems: FirebaseListObservable<AlertMarker[]>;\n    private showCompleted: Boolean;\n    private showPanel: Boolean;\n\n    private selectedKey: number;\n    private sub: any;\n\n    constructor( private service: AlertsService,\n                 private route: ActivatedRoute,\n                 private router: Router) {\n        this.showCompleted = true;\n        this.showPanel = true;\n    }\n\n    isSelected(alert: AlertMarker) { return alert.id === this.selectedKey; }\n\n    ngOnInit() {\n        this.sub = this.route\n            .params\n            .subscribe(params => {\n                this.selectedKey = +params['key'];\n                this.alertItems = this.service.getAlerts();\n            });\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n    }\n\n    onSelect(alert: AlertMarker) {\n        // Navigate with Absolute link\n        this.router.navigate(['/alerts', alert.id]);\n    }\n\n    /*addAlert() {\n        this.selectedKey = service.addAlert(Alert.clone(this.alert));\n        this.alert.clear();\n    }\n\n    updateAlert(key: string, newObject: Alert) {\n        service.updateAlert(key, newObject);\n    }\n\n    delAlert(key: string) {\n        service.removeAlert(key);\n    }*/\n}\n"],"sourceRoot":"/source/"}