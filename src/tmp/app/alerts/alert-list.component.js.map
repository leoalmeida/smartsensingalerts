{"version":3,"sources":["app/alerts/alert-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AACA,qBAA6C,eAAe,CAAC,CAAA;AAE7D,6CAAuD,gCAAgC,CAAC,CAAA;AACxF,gCAA8B,0BAA0B,CAAC,CAAA;AAEzD,+BAA8B,kBAAkB,CAAC,CAAA;AACjD,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,mCAAkC,sBAAsB,CAAC,CAAA;AASzD;IAQI,6BAAqB,OAAsB,EACtB,MAAc;QADd,YAAO,GAAP,OAAO,CAAe;QACtB,WAAM,GAAN,MAAM,CAAQ;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,wCAAU,GAAV,UAAW,GAAW,IAAI,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAE5D,sCAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM;aACjB,WAAW;aACX,WAAW;aACX,SAAS,CAAC,UAAA,MAAM;YACb,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACjC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,yCAAW,GAAX;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,sCAAQ,GAAR,UAAS,GAAW;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAvCL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,uBAAuB,CAAC;YACpC,UAAU,EAAE,CAAC,+BAAa,EAAE,sCAAiB,CAAC;YAC9C,KAAK,EAAE,CAAC,wDAAyB,EAAE,0CAAW,CAAC;SAClD,CAAC;;2BAAA;IA+CF,0BAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,2BAAmB,sBA8C/B,CAAA","file":"app/alerts/alert-list.component.js","sourcesContent":["\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FirebaseListObservable } from 'angularfire2';\nimport { CompletedAlertsFilterPipe, ReversePipe } from './completed-alerts-filter.pipe';\nimport { MapsComponent } from '../utils/gmaps.component';\nimport { AlertMarker } from '../management/interfaces';\nimport { AlertsService } from './alerts.service';\nimport { Router } from '@angular/router';\nimport { AlertBoxComponent } from './alertbox.component';\n\n@Component({\n    selector: 'as-alert-list',\n    templateUrl: 'app/alerts/alert-list.html',\n    styleUrls: ['app/alerts/alerts.css'],\n    directives: [MapsComponent, AlertBoxComponent],\n    pipes: [CompletedAlertsFilterPipe, ReversePipe]\n})\nexport class AlertsListComponent implements OnInit, OnDestroy {\n    private alertItems: FirebaseListObservable<AlertMarker[]>;\n    private showCompleted: Boolean;\n    private showPanel: Boolean;\n\n    private selectedKey: string;\n    private sub: any;\n\n    constructor( private service: AlertsService,\n                 private router: Router) {\n        this.showCompleted = true;\n        this.showPanel = true;\n    }\n\n    isSelected(key: string) { return key === this.selectedKey; }\n\n    ngOnInit() {\n        this.sub = this.router\n            .routerState\n            .queryParams\n            .subscribe(params => {\n                this.selectedKey = params['key'];\n                this.alertItems = this.service.getAlerts();\n            });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    onSelect(key: string) {\n        this.router.navigate(['/alertas', key]);\n    }\n\n    /*addAlert() {\n        this.selectedKey = service.addAlert(Alert.clone(this.alert));\n        this.alert.clear();\n    }\n\n    updateAlert(key: string, newObject: Alert) {\n        service.updateAlert(key, newObject);\n    }\n\n    delAlert(key: string) {\n        service.removeAlert(key);\n    }*/\n}\n"],"sourceRoot":"/source/"}