{"version":3,"sources":["app/alerts/alerts.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,qBAA2B,eAAe,CAAC,CAAA;AAE3C,6BAAoD,2BAA2B,CAAC,CAAA;AAChF,wBAAwB,cAAc,CAAC,CAAA;AAEvC,IAAI,YAAiB,CAAC;AAGtB;IAMI,uBAAY,EAAe;QAN/B,iBAuDC;QAhDO,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;YACzC,KAAK,EAAE;gBACH,YAAY,EAAE,UAAU;aAC3B;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,iBAAO,EAAU,CAAC;QAE1C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC1C,KAAK,EAAE;gBACH,YAAY,EAAE,IAAI;gBAClB,OAAO,EAAE,IAAI,CAAC,YAAY;gBAC1B,YAAY,EAAE,CAAC;aAClB;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAA,YAAY;YACnC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAS,GAAT,cAAc,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAEvC,gCAAQ,GAAR,UAAS,GAAW;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEhD,MAAM,CAAC,YAAY,CAAC;IACxB,CAAC;IAED,gCAAQ,GAAR,UAAS,SAAsB;QAC3B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;QACnD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,mCAAW,GAAX,UAAY,KAAa,EAAE,aAA0B;QACjD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IACjD,CAAC;IAED,mCAAW,GAAX,UAAY,KAAa;QACrB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,oFAAoF;IACxF,CAAC;IAtDL;QAAC,iBAAU,EAAE;;qBAAA;IAwDb,oBAAC;AAAD,CAvDA,AAuDC,IAAA;AAvDY,qBAAa,gBAuDzB,CAAA","file":"app/alerts/alerts.service.js","sourcesContent":["/**\n * Created by LeonardoAlmeida on 26/06/16.\n */\nimport { Injectable } from '@angular/core';\nimport { AlertMarker } from '../management/interfaces';\nimport { FirebaseListObservable, AngularFire } from 'angularfire2/angularfire2';\nimport { Subject } from 'rxjs/Subject';\n\nlet alertPromise: any;\n\n@Injectable()\nexport class AlertsService {\n    private alertItems: FirebaseListObservable<AlertMarker[]>;\n    private alertFilter: FirebaseListObservable<AlertMarker[]>;\n    private alert: AlertMarker;\n    private alertSubject: Subject<string>;\n\n    constructor(af: AngularFire) {\n        this.alertItems = af.database.list('alerts', {\n            query: {\n                orderByChild: 'severity'\n            }\n        });\n\n        this.alertSubject = new Subject<string>();\n\n        this.alertFilter = af.database.list('alerts', {\n            query: {\n                orderByChild: 'id',\n                equalTo: this.alertSubject,\n                limitToFirst: 1\n            }\n        });\n\n        this.alertFilter.subscribe(queriedItems => {\n            console.log(queriedItems);\n            this.alert = queriedItems[0];\n        });\n    }\n\n    getAlerts() { return this.alertItems; }\n\n    getAlert(key: string) {\n        this.alertSubject.next(key);\n        alertPromise = Promise.resolve(this.alertItems);\n\n        return alertPromise;\n    }\n\n    addAlert(newObject: AlertMarker): string {\n        let newkey = '';\n        if (newObject) {\n            newkey = this.alertItems.push(newObject).key();\n        }\n        return newkey;\n    }\n\n    updateAlert(fbkey: string, updatedObject: AlertMarker) {\n        this.alertItems.update(fbkey, updatedObject);\n    }\n\n    removeAlert(fbkey: string) {\n        this.alertItems.remove(fbkey);\n        // this.alertItems = this.alertItems.filter((alert, index) => index !== alertIndex);\n    }\n\n}\n"],"sourceRoot":"/source/"}