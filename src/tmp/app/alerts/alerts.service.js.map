{"version":3,"sources":["app/alerts/alerts.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,qBAA2B,eAAe,CAAC,CAAA;AAE3C,6BAAkD,2BAA2B,CAAC,CAAA;AAI9E;IAEI,6BAA6B;IAE7B,uBAAY,EAAe;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAED,iCAAS,GAAT,cAAc,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAEvC,gCAAQ,GAAR,UAAS,GAAW;QAChB,6EAA6E;QAC7E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;aACnB,OAAO,CAAC,GAAG,CAAC;aACZ,EAAE,CAAC,aAAa,EAAE,UAAS,QAAQ;YAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,gCAAQ,GAAR,UAAS,SAAsB;QAC3B,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;QACnD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,mCAAW,GAAX,UAAY,KAAa,EAAE,aAA0B;QACjD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IACjD,CAAC;IAED,mCAAW,GAAX,UAAY,KAAa;QACrB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,oFAAoF;IACxF,CAAC;IApCL;QAAC,iBAAU,EAAE;;qBAAA;IAqCb,oBAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,qBAAa,gBAoCzB,CAAA","file":"app/alerts/alerts.service.js","sourcesContent":["/**\n * Created by LeonardoAlmeida on 26/06/16.\n */\nimport { Injectable } from '@angular/core';\nimport {AlertMarker} from '../management/interfaces';\nimport {FirebaseListObservable, AngularFire} from 'angularfire2/angularfire2';\n\n\n@Injectable()\nexport class AlertsService {\n    private alertItems: FirebaseListObservable<AlertMarker[]>;\n    // private dbname = 'alerts';\n\n    constructor(af: AngularFire) {\n        this.alertItems = af.database.list('/alerts');\n    }\n\n    getAlerts() { return this.alertItems; }\n\n    getAlert(key: number): AlertMarker {\n        // return this.af.database. alertItems.filter(alert => alert.key === key)[0];\n        this.alertItems._ref.orderByChild('key')\n                            .equalTo(key)\n                            .on('child_added', function(snapshot) {\n                                console.log(snapshot.key);\n                            });\n        return this.alertItems[0];\n    }\n\n    addAlert(newObject: AlertMarker): number {\n        let newkey = -1;\n        if (newObject) {\n            newkey = this.alertItems.push(newObject).key();\n        }\n        return newkey;\n    }\n\n    updateAlert(fbkey: string, updatedObject: AlertMarker) {\n        this.alertItems.update(fbkey, updatedObject);\n    }\n\n    removeAlert(fbkey: string) {\n        this.alertItems.remove(fbkey);\n        // this.alertItems = this.alertItems.filter((alert, index) => index !== alertIndex);\n    }\n}\n"],"sourceRoot":"/source/"}