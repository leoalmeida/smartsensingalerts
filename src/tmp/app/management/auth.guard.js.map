{"version":3,"sources":["app/management/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuC,eAAe,CAAC,CAAA;AACvD,uBAGkC,iBAAiB,CAAC,CAAA;AACpD,6BAAuC,gBAAgB,CAAC,CAAA;AAGxD;IACI,mBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,+BAAW,GAAX;QACI,oCAAoC;QACpC,IAA6B,EAC7B,KAA0B;QAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAZL;QAAC,iBAAU,EAAE;;iBAAA;IAab,gBAAC;AAAD,CAZA,AAYC,IAAA;AAZY,iBAAS,YAYrB,CAAA","file":"app/management/auth.guard.js","sourcesContent":["import { Injectable }             from '@angular/core';\nimport { CanActivate,\n    Router,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot }    from '@angular/router';\nimport { AuthService }            from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) {}\n\n    canActivate(\n        // Not using but worth knowing about\n        next:  ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ) {\n        if (this.authService.isLoggedIn) { return true; }\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n"],"sourceRoot":"/source/"}