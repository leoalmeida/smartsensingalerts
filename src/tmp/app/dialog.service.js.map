{"version":3,"sources":["app/dialog.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C;;;;GAIG;AAEH;IAAA;IAUA,CAAC;IATG;;;OAGG;IACH,+BAAO,GAAP,UAAQ,OAAgB;QACpB,MAAM,CAAC,IAAI,OAAO,CAAU,UAAA,OAAO;YAC/B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC;;IAVL;QAAC,iBAAU,EAAE;;qBAAA;IAWb,oBAAC;AAAD,CAVA,AAUC,IAAA;AAVY,qBAAa,gBAUzB,CAAA","file":"app/dialog.service.js","sourcesContent":["import { Injectable } from '@angular/core';\n/**\n * Async modal dialog service\n * DialogService makes this app easier to test by faking this service.\n * TODO: better modal implementation that doesn't use window.confirm\n */\n@Injectable()\nexport class DialogService {\n    /**\n     * Ask user to confirm an action. `message` explains the action and choices.\n     * Returns promise resolving to `true`=confirm or `false`=cancel\n     */\n    confirm(message?: string) {\n        return new Promise<boolean>(resolve => {\n            return resolve(window.confirm(message || 'Is it OK?'));\n        });\n    };\n}\n"],"sourceRoot":"/source/"}